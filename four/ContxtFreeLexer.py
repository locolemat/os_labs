# Generated from ContxtFree.g4 by ANTLR 4.11.1
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,11,70,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,
        6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,1,0,1,0,1,1,1,1,1,2,1,2,
        1,3,1,3,1,4,1,4,1,5,1,5,1,6,1,6,1,7,1,7,1,8,1,8,1,9,4,9,43,8,9,11,
        9,12,9,44,1,10,4,10,48,8,10,11,10,12,10,49,1,10,1,10,4,10,54,8,10,
        11,10,12,10,55,1,10,1,10,4,10,60,8,10,11,10,12,10,61,1,10,4,10,65,
        8,10,11,10,12,10,66,3,10,69,8,10,0,0,11,1,1,3,2,5,3,7,4,9,5,11,6,
        13,7,15,8,17,9,19,10,21,11,1,0,1,1,0,48,57,76,0,1,1,0,0,0,0,3,1,
        0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,
        0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,1,23,1,0,
        0,0,3,25,1,0,0,0,5,27,1,0,0,0,7,29,1,0,0,0,9,31,1,0,0,0,11,33,1,
        0,0,0,13,35,1,0,0,0,15,37,1,0,0,0,17,39,1,0,0,0,19,42,1,0,0,0,21,
        68,1,0,0,0,23,24,5,40,0,0,24,2,1,0,0,0,25,26,5,41,0,0,26,4,1,0,0,
        0,27,28,5,94,0,0,28,6,1,0,0,0,29,30,5,42,0,0,30,8,1,0,0,0,31,32,
        5,47,0,0,32,10,1,0,0,0,33,34,5,62,0,0,34,12,1,0,0,0,35,36,5,60,0,
        0,36,14,1,0,0,0,37,38,5,38,0,0,38,16,1,0,0,0,39,40,5,46,0,0,40,18,
        1,0,0,0,41,43,7,0,0,0,42,41,1,0,0,0,43,44,1,0,0,0,44,42,1,0,0,0,
        44,45,1,0,0,0,45,20,1,0,0,0,46,48,3,19,9,0,47,46,1,0,0,0,48,49,1,
        0,0,0,49,47,1,0,0,0,49,50,1,0,0,0,50,51,1,0,0,0,51,53,3,17,8,0,52,
        54,3,19,9,0,53,52,1,0,0,0,54,55,1,0,0,0,55,53,1,0,0,0,55,56,1,0,
        0,0,56,69,1,0,0,0,57,59,3,17,8,0,58,60,3,19,9,0,59,58,1,0,0,0,60,
        61,1,0,0,0,61,59,1,0,0,0,61,62,1,0,0,0,62,69,1,0,0,0,63,65,3,19,
        9,0,64,63,1,0,0,0,65,66,1,0,0,0,66,64,1,0,0,0,66,67,1,0,0,0,67,69,
        1,0,0,0,68,47,1,0,0,0,68,57,1,0,0,0,68,64,1,0,0,0,69,22,1,0,0,0,
        7,0,44,49,55,61,66,68,0
    ]

class ContxtFreeLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    PT = 9
    NUMBER = 10
    DBL = 11

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'('", "')'", "'^'", "'*'", "'/'", "'>'", "'<'", "'&'", "'.'" ]

    symbolicNames = [ "<INVALID>",
            "PT", "NUMBER", "DBL" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "PT", "NUMBER", "DBL" ]

    grammarFileName = "ContxtFree.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.11.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


